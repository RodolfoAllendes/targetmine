########################################################################################
### SQL database configuration                                                       ###
########################################################################################

### The following are used to configure the DataSource. DataSource specific properties
### can be added here, and will be set automatically. The examples given here are for
### PostgreSQL.

### DataSource implementation to use
db.database1.datasource.class=org.postgresql.jdbc3.Jdbc3PoolingDataSource

### Name by which this database is to be known (should match property prefix)
db.database1.datasource.dataSourceName=db.database1

### Server on which database is running
db.database1.datasource.serverName=myserver.mydomain.org

### Database name on that server
db.database1.datasource.databaseName=dbname

### User name to use
db.database1.datasource.user=user1

### Password to use
db.database1.datasource.password=secret

### Max connections in pool
db.database1.datasource.maxConnections=10

### Driver class to use (used only by Torque when generating database)
db.database1.driver=org.postgresql.Driver

### Platform name (as used by Torque)
db.database1.platform=PostgreSQL


########################################################################################
### General ObjectStore configuration                                                ###
########################################################################################

### Maximum time that we will allow for a query to run (in microseconds)
### If a query is estimated to take longer than this it will be rejected
os.query.max-time=1000000000

### The maximum number of rows that each batch of results is allowed
os.query.max-limit=10000

### The highest offset that we are allowed to ask for in a query
os.query.max-offset=10000

### The number of results batches that are cached
os.queue-len=100


########################################################################################
### Individual ObjectStore configuration                                             ###
########################################################################################

### ObjectStore that uses OJB to retrieve data

### ObjectStore implementation to use
os.store1.class=org.intermine.objectstore.intermine.ObjectStoreInterMineImpl

### Model that is being used
os.store1.model=testmodel

### Implementation specific properties
### Name of database (from above) that the data is being stored in
os.store1.db=db.database1


########################################################################################
### ObjectStoreWriter configuration                                                  ###
########################################################################################

### ObjectStoreWriter implementation to use
osw.writer1.class=org.intermine.objectstore.intermine.ObjectStoreWriterInterMineImpl

### ObjectStore to use
osw.writer1.class=os.store1


########################################################################################
### IntegrationWriter configuration                                                  ###
########################################################################################

### IntegrationWriter implementation to use
integration.integrator1.class =org.intermine.dataloader.IntegrationWriterSingleSourceImpl

### ObjectStoreWriter to use
integration.integrator1.osw=osw.writer1
