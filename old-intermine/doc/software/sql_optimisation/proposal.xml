<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.0//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.0/sdocbook.dtd">
<article>
  <articleinfo>
    <date>2003-07-02</date>

    <title>InterMine - A proposal to improve the Query Optimiser for EXPLAIN
    operations</title>

    <authorgroup>
      <author>
        <firstname>Matthew</firstname>

        <surname>Wakeling</surname>
      </author>
    </authorgroup>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>This document describes a proposal to improve the Query Optimiser,
    by allowing it to cache EXPLAIN operations.</para>
  </section>

  <section>
    <title>Rationale</title>

    <para>At the moment, the InterMine objectstore performs an EXPLAIN
    operation on every page request, before running a query to retrieve that
    page. The query optimiser in the process of optimising the query also runs
    EXPLAIN operations on the query, until it finds the quickest query.
    Therefore, an EXPLAIN is run multiple times on identical queries.</para>

    <para>In addition, the InterMine objectstore will continue paging through
    the results set, running the same query with different LIMIT and OFFSET
    values. The optimiser cache divides the results set into a small set of
    partitions which are individually optimised because all the queries in
    each partition are very similar. Therefore, currently the overall system
    optimises the query first (which involves EXPLAINing the query), then
    performs an EXPLAIN on every page request. However, each EXPLAIN result in
    a given partition will be very similar. Since EXPLAIN results are advisory
    estimates, it may be acceptable for the optimiser to return a single
    explain result for each partition, thereby greatly reducing the number of
    EXPLAIN requests that the database has to handle.</para>
  </section>

  <section>
    <title>Implementation</title>

    <para>Currently, the QueryOptimiser.optimise(string, database) method has
    available to it the full EXPLAIN result for the optimised query. However,
    the OptimiserCache only stores the expected number of rows in the
    unlimited query. I propose that the OptimiserCache is changed to accept
    the full EXPLAIN result as well, with the OptimiserCacheLine. Then the
    optimise() method can be altered to return an object with both the
    optimised query and its explain result. The InterMine objectstore can then
    either make use of this (therefore avoiding performing SQL generation
    twice), or it can use two new methods which return only the optimised
    query or the explain result respectively.</para>

    <para>In addition, it would be good to re-adjust the partitioning that the
    optimiser cache performs, because an EXPLAIN result is likely to vary with
    OFFSET lots when OFFSET is low.</para>
  </section>
</article>