<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.0//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.0/sdocbook.dtd">
<article>
  <articleinfo>
    <date>2003-10-14</date>

    <title>An Expert-Controlled Method for Merging OWL Ontologies (Working
    Document)</title>

    <authorgroup>
      <author>
        <firstname>Richard</firstname>

        <surname>Smith</surname>
      </author>

      <author>
        <firstname>Mark</firstname>

        <surname>Woodbridge</surname>
      </author>
    </authorgroup>
  </articleinfo>

  <para>We describe a simple method to merge OWL ontologies given that points
  of intersection between source ontologies are identified manually. An expert
  in the field of interest can define classes/properties that are equivalent
  between any number of source OWL ontologies. Using this definition automatic
  creation of a new merged target ontology is performed using the equivalence
  terms in the OWL vocabulary. Specifically, the user will define a merge
  specification containing the desired name of overlapping resources in the
  target ontology and an owl:equivalent* or owl:sameAs statement associated
  with them for each source document they appear in. Automatic merging is done
  by transferring each resource from source documents to the target space
  <emphasis>unless</emphasis> it is listed as an equivalence in the merge
  spec, in which case a lookup is performed for the target name.</para>

  <section>
    <title>Introduction to concepts</title>

    <para>owl : properties are toplevel</para>
  </section>

  <section>
    <title>Problem Space</title>

    <para>We need a method of producing a merged ontology from any number of
    source ontologies that describe overlapping concepts. As much of this task
    as possible should be automated but the key job of identifying
    intersection points between them is done by one or more users who are
    familiar with the data in question. We do not require an algorithm to
    [semi-]automate this procedure. We do, however, wish to eliminate any
    labour for the user over and above deciding upon the equivalence of terms.
    It is desirable to make the mapping between source and merged OWL files
    reversible, to allow retrieval of original ontologies and to retain
    knowledge of which terms are derived from which source. Additionally we
    would like to specify that some source resources do not appear in the
    target ontology but that their presence is not lost.</para>
  </section>

  <section>
    <title>Merging by Equivalence</title>

    <para>A merge specification is produced by the user given the knowledge of
    the source data. This describes the the following (by resource we mean
    Class, Property or Individual):</para>

    <itemizedlist>
      <listitem>
        <para>resources that are part of more than one ontology</para>
      </listitem>

      <listitem>
        <para>resources from a single source that will have a different local
        name in the target document</para>
      </listitem>

      <listitem>
        <para>resources from a source that should not appear in the target
        ontology</para>
      </listitem>

      <listitem>
        <para>clarification of details about source resources - e.g.
        datatypes, cardinality.</para>
      </listitem>
    </itemizedlist>

    <para>We define the terms: 'namespace' as the URI of an OWL document,
    'local name' as the name of a resource within a particular namespace and
    'full name' as a fully qualified resource name, i.e. namespace + local
    name. Each resouce listed in the merge spec must give the
    information:</para>

    <para>The merge specification is itself an OWL document which completely
    defines the overlapping elements of source ontologies. Each resource
    should detail it sequivalent resoureces in source namespaces. The terms
    used are:</para>

    <itemizedlist>
      <listitem>
        <para>owl:equivalentClass for classes</para>
      </listitem>

      <listitem>
        <para>owl:equivalentProperty for properties</para>
      </listitem>

      <listitem>
        <para>owl:sameAs for Individuals</para>
      </listitem>
    </itemizedlist>

    <para>The merging process is best illustrated by example</para>

    <programlisting>
            @prefix :     http://www.intermine.org/target# .
            @prefix src1: http://www.intermine.org/source1# .
            @prefix src2: http://www.intermine.org/source2# .

            @prefix owl:  http://www.w3.org/2002/07/owl# .
            @prefix rdf:  http://www.w3.org/1999/02/22-rdf-syntax-ns# .
            @prefix rdfs: http://www.w3.org/2000/01/rdf-schema# .

            :Company rdf:type owl:Class ;
                     owl:equivalentClass src1:LtdCompany ;
                     owl:equivalentClass src2:Corporation .
            :name rdf:type rdf:Property ;
                         rdfs:domain :Company ;
                         rdfs:range http://www.w3.org/2001/XMLSchema#string ;
                         owl:equivalentProperty src1:companyName ;
                         owl:equivalentProperty src2:corpName . 
         </programlisting>

    <para>This states that the class LtdCompany in source1 and Corporation in
    source2 both map to Company in our target ontology. The same is true for
    properties companyName and corpName mapping to name in the target
    namespace.</para>
  </section>
</article>