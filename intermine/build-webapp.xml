<project name="intermine-webapp" basedir=".">
  <description>InterMine WebApp build file</description>

  <target name="compile-userprofile" >
    <ant antfile="build-model.xml" target="build-model-from-zargo" inheritRefs="true">
      <property name="model.name" value="userprofile"/>
      <property name="model.src" value="${model}/userprofile"/>
    </ant>
  </target>
  
  <target name="compile-webapp" depends="compile-userprofile">
    <javac destdir="${build.java}" listfiles="yes" debuglevel="lines,vars,source" debug="on">
      <classpath refid="class.path"/>
      <src path="${build.src.java}"/>
      <include name="org/intermine/web/**"/>
    </javac>
  </target>
  
  <target name="jar-webapp" depends="compile-webapp">
    <condition property="version" value="${DTSTAMP}">
      <not>
        <isset property="version" />
      </not>
    </condition>

    <echo message="Creating jar file version ${version}" />

    <manifest file="${build.tmp}/MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Specification-Title" value="InterMine"/>
      <attribute name="Specification-Version" value="${version}"/>
      <attribute name="Specification-Vendor" value="InterMine"/>
      <attribute name="Implementation-Title" value="InterMine"/>
      <attribute name="Implementation-Version" value="${version}"/> 
      <attribute name="Implementation-Vendor" value="InterMine"/>
    </manifest>

    <jar destfile="${dist}/intermine-webapp.jar" manifest="${build.tmp}/MANIFEST.MF">
      <fileset dir="${build.java}" includes="org/intermine/web/**"/>
      <fileset dir="${build.model}/userprofile" excludes="tmp/**"/>
      <fileset file="${build.resources}/log4j.properties"/>
    </jar>
  </target>

  <target name="prepare-webapp" depends="jar-webapp">
    <mkdir dir="${build.webapp}/intermine"/>
    <mkdir dir="${build.webapp}/intermine/images"/>
    <mkdir dir="${build.webapp}/intermine/model"/>
    <mkdir dir="${build.webapp}/intermine/META-INF"/>
    <mkdir dir="${build.webapp}/intermine/WEB-INF"/>
    <mkdir dir="${build.webapp}/intermine/WEB-INF/classes"/>
    <mkdir dir="${build.webapp}/intermine/WEB-INF/lib"/>

    <copy todir="${build.webapp}/intermine">
      <fileset dir="${src.webapp}"/>
      <fileset file="${resources}/webapps/intermine/intermine.css"/>
    </copy>
    <copy todir="${build.webapp}/intermine/images">
      <fileset dir="${resources}/webapps/intermine/images"/>
    </copy>
    <filter token="SITE_PREFIX" value="${www.location}"/>
    <copy todir="${build.webapp}/intermine/WEB-INF" filtering="true">
      <fileset dir="${resources}/webapps/intermine"
               excludes="web.xml images/** InterMineWebApp*.properties default.intermine.properties intermine.css"/>
    </copy>
    <copy todir="${build.webapp}/intermine/WEB-INF/lib">
      <fileset dir="${lib}">
        <patternset refid="lib.webapp.intermine"/>
      </fileset>
      <fileset dir="${dist}" includes="intermine.jar intermine-webapp.jar"/>
    </copy>
    <copy todir="${build.webapp}/intermine/WEB-INF/classes">
      <fileset dir="${resources}/webapps/intermine"
               includes="InterMineWebApp*.properties default.intermine.properties"/>
    </copy>
  </target>
  
  <target name="build-webapp" depends="prepare-webapp"
          description="Build webapp without including a model">
    <war destfile="${war}" webxml="${resources}/webapps/intermine/web.xml">
      <fileset dir="${build.webapp}/intermine"/>
    </war>
  </target>

  <target name="add-to-war-root"
          description="Add file(s) to the root directory">
    <war destfile="${war}" update="true">
      <fileset dir="${file.dir}">
        <patternset refid="file.names"/>
      </fileset>      
    </war>
  </target>
  
  <target name="add-to-war-webinf"
          description="Add file(s) to the WEB-INF directory">
    <war destfile="${war}" update="true">
      <webinf dir="${file.dir}">
        <patternset refid="file.names"/>
      </webinf>
    </war>
  </target>

   <target name="add-to-war-metainf"
          description="Add file(s) to the META-INF directory">
    <war destfile="${war}" update="true">
      <metainf dir="${file.dir}">
        <patternset refid="file.names"/>
      </metainf>
    </war>
  </target>  

  <target name="add-to-war-lib"
          description="Add file(s) to the WEB-INF/lib directory">
    <war destfile="${war}" update="true">
      <lib dir="${file.dir}">
        <patternset refid="file.names"/>
      </lib>
    </war>
  </target>

  <target name="add-to-war-classes"
          description="Add file(s) to the WEB-INF/classes directory">
    <war destfile="${war}" update="true">
      <classes dir="${file.dir}">
        <patternset refid="file.names"/>
      </classes>
    </war>
  </target>

  <target name="add-model-to-webapp" 
          description="Add a model to the webapp">

    <loadfile property="model.struts.config" srcFile="${model}/${model.name}/resources/web/struts-config-model.xml"/>   

    <unwar src="${war}" dest="${build.tmp}">   
      <patternset>
        <include name="**/struts-config.xml"/>        
      </patternset>
    </unwar>

    <replace file="${build.tmp}/WEB-INF/struts-config.xml" value="${model.struts.config}">
      <!-- can't use normal token as xml must be parseable before this replacement -->
      <replacetoken><![CDATA[<!--@MODEL_INCLUDE@-->]]></replacetoken>
    </replace>
    <mkdir dir="${build.webapp}/intermine/"/>
    <copy todir="${build.webapp}/intermine/model" failonerror="false" >
      <fileset dir="${model}/${model.name}/src/web/jsp"/>
      <fileset dir="${model}/${model.name}/src/web/images"/>
      <fileset file="${model}/${model.name}/resources/web/model.css"/>
    </copy>

    <!-- Make a copy in order to rename file -->
    <copy file="${runtime.properties.local}" toFile="${build.tmp}/WEB-INF/intermine.properties"/>

    <war destfile="${war}" update="true">
      <fileset dir="${build.webapp}/intermine" includes="model/**/*" excludes="*.properties"/>
      <webinf file="${build.tmp}/WEB-INF/struts-config.xml"/>
      <webinf dir="${model}/${model.name}/resources/web" excludes="model.properties"/>
      <lib dir="${dist}" includes="intermine-${model.name}.jar"/>
      <classes file="${model}/${model.name}/resources/web/model.properties"/>
      <classes file="${build.tmp}/WEB-INF/intermine.properties" />
      <classes dir="${build.model}/${model.name}" includes="**/web/*.class"/>
    </war>

  </target>

  <target name="release-webapp" depends=""
          description="releases the InterMine web application to the server">
    

    <taskdef name="tomcat-deploy" classname="org.apache.catalina.ant.DeployTask">
      <classpath refid="class.path"/>
    </taskdef>

    <tomcat-deploy 
      url="${webapp.baseurl}/manager"
      username="${webapp.manager}" 
      password="${webapp.password}"
      path="${webapp.path}" 
      war="file://${war}"/> 
  </target>

  <target name="remove-webapp"
          description="remove the web application from the server">
    <taskdef name="tomcat-undeploy" 
             classname="org.apache.catalina.ant.UndeployTask">
      <classpath refid="class.path"/>
    </taskdef>
    <tomcat-undeploy
      url="${webapp.baseurl}/manager"
      username="${webapp.manager}" 
      password="${webapp.password}"
      path="${webapp.path}"/>
  </target>
</project>  
