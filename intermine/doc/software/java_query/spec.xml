<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.0//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.0/sdocbook.dtd">
<article>
  <articleinfo>
    <date>2003-06-27</date>

    <title>InterMine - Java Query specification</title>

    <authorgroup>
      <author>
        <firstname>Matthew</firstname>

        <surname>Wakeling</surname>
      </author>
    </authorgroup>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>This document is intended to provide information on the Java
    interface to the InterMine Query. The <ulink
    url="../iql_query/spec.xml">IQL document</ulink> provides a reasonable
    background to the structure of the interface, since IQL maps fairly
    directly onto the Java interface. In fact, by far the easiest method of
    creating a Java InterMine Query object is to use the following
    constructor:</para>

    <programlisting>
import <ulink url="http://www.intermine.org/api/org/intermine/objectstore/query/Query.html">org.intermine.objectstore.query.Query</ulink>;
import <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/iql/IqlQuery.html">org.intermine.objectstore.query.iql.IqlQuery</ulink>;

Query q = new IqlQuery("--- IQL Query text ---", null).toQuery();
		</programlisting>

    <para>However, in a Java program, one will occasionally require more
    flexibility - the Java interface is a more direct method of inserting
    parameters into the Query, rather than converting them into text and
    expecting the parser to convert back.</para>
  </section>

  <section>
    <title>Structure</title>

    <itemizedlist>
      <listitem>
        <para>The Java Query object has a From list (which is actually a Set),
        which can contain <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/FromElement.html">FromElement</ulink>
        objects (which can be <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryClass.html">QueryClass</ulink>
        or <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/Query.html">Query</ulink>
        objects).</para>
      </listitem>

      <listitem>
        <para>The object has a Select list, which can contain any <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryNode.html">QueryNode</ulink>
        object, which include <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryClass.html">QueryClass</ulink>,
        <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryExpression.html">QueryExpression</ulink>,
        <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryField.html">QueryField</ulink>,
        <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryFunction.html">QueryFunction</ulink>,
        and <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryValue.html">QueryValue</ulink>.</para>
      </listitem>

      <listitem>
        <para>The object has an Order By list, which can contain any <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryNode.html">QueryNode</ulink>.</para>
      </listitem>

      <listitem>
        <para>The object has a Group By list (which is actually a Set), which
        can contain <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryNode.html">QueryNode</ulink>
        objects. However, it does not make sense to include <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryValue.html">QueryValue</ulink>
        objects directly, or <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryFunction.html">QueryFunction</ulink>
        objects at all.</para>
      </listitem>

      <listitem>
        <para>The object has a reference to a <emphasis>single</emphasis>
        <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/Constraint.html">Constraint</ulink>
        object, but multiple constraints can be included by encapsulating them
        in a <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/ConstraintSet.html">ConstraintSet</ulink>
        object.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>API Javadoc</title>

    <para>The most exhaustive source of information on the Java InterMine
    Query interface is in the <ulink
    url="http://www.intermine.org/api/org/intermine/objectstore/query/package-summary.html">API
    Javadoc</ulink>. The InterMine Query is implemented in the
    org.intermine.objectstore.query package.</para>
  </section>

  <section>
    <title>An Example</title>

    <para>This is an example of how one would build a Java InterMine Query
    object to represent the IQL query:</para>

    <programlisting>
SELECT a.field1, a.field2 FROM a WHERE a.field3 = 'Hello';
		</programlisting>

    <para>The Query is built up in stages.</para>

    <programlisting>
import <ulink url="http://www.intermine.org/api/org/intermine/objectstore/query/Query.html">org.intermine.objectstore.query.Query</ulink>;
import <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryClass.html">org.intermine.objectstore.query.QueryClass</ulink>;
import <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryField.html">org.intermine.objectstore.query.QueryField</ulink>;
import <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/QueryValue.html">org.intermine.objectstore.query.QueryValue</ulink>;
import <ulink
        url="http://www.intermine.org/api/org/intermine/objectstore/query/SimpleConstraint.html">org.intermine.objectstore.query.SimpleConstraint</ulink>;

Query q = new Query();
QueryClass c = new QueryClass(a.class);
QueryField f1 = new QueryField(c, "field1");
QueryField f2 = new QueryField(c, "field2");
QueryField f3 = new QueryField(c, "field3");
QueryValue v = new QueryValue("Hello");
SimpleConstraint sc = new SimpleConstraint(f3, SimpleConstraint.EQUALS, v);
q.addFrom(c);
q.addToSelect(f1);
q.addToSelect(f2);
q.setConstraint(sc);
		</programlisting>
  </section>
</article>
