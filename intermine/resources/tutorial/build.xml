 <project name="InterMine tutorial" default="help" basedir=".">
  <description>Build file for InterMine tutorial application</description>
  
  <property file="build.properties"/>

  <!-- directory locations -->
  <property name="model" location="model"/>
  <property name="build" location="build"/>
  <property name="build.java" location="${build}/java"/>
  <property name="build.tmp" location="${build}/tmp"/>
  <property name="build.model" location="${build}/model"/>
  <property name="build.resources" location="${build}/resources"/>
  <property name="lib" location="lib"/>
  <property name="resources" location="resources"/>
  <property name="src" location="src"/>
  <property name="src.java" location="${src}/java"/>
  <property name="dist" location="dist"/>
  <property name="build.webapp" location="${build}/webapp"/>

  <!-- runtime settings -->
  <property name="runtime.properties" value="intermine.properties" />
  <property name="runtime.properties.local" value="${user.home}/${ant.project.name}.properties" />
  <property name="namespace" value="http://www.intermine.org/model"/>
  <!-- classpaths -->
  <path id="project.class.path">
    <pathelement path="${build.java}"/>
    <pathelement path="${build.resources}"/>
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="tutorial.class.path">
    <path refid="project.class.path"/>
    <pathelement location="${build.model}/tutorial"/>
  </path>

  <!-- initialisation -->
  <target name="prepare">  
    <mkdir dir="${dist}"/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build.java}"/>
    <mkdir dir="${build.tmp}"/>
    <mkdir dir="${build.model}"/>
    <mkdir dir="${build.model}/tutorial"/>
    <mkdir dir="${build.resources}"/>
    <mkdir dir="${build.webapp}"/>
   
    <copy file="${lib}/intermine.war" todir="${build.webapp}"/>
    <copy file="${runtime.properties}" tofile="${build.resources}/default.intermine.properties"/>
     <copy file="${runtime.properties.local}" tofile="${build.resources}/intermine.properties" failonerror="false"/>
    <copy todir="${build.resources}">
      <fileset dir="${resources}"/>
    </copy>
  </target>

  <!-- help -->
  <target name="help" description="Displays user targets">
    <echo message=""/>
    <echo message="InterMine tutorial build file - available targets are:"/>
    <echo message=""/>
    <echo message="run      --> runs the tutorial"/>
    <echo message="clean    --> cleans up the directory"/>
    <echo message=""/>
    <echo message="See 'ant -projecthelp' for full target list"/>
  </target>

  <!-- build model -->
  <!--
  <target name="build-model" depends="prepare" >
    <ant antfile="build-model.xml" target="build-model-from-xml" inheritRefs="true">
      <property name="model.name" value="tutorial"/>
      <property name="model.src" value="${model}"/>
      <reference torefid="class.path" refid="tutorial.class.path"/>
    </ant>
  </target>
   -->


  <!-- Example of building model from an ArgoUML file -->
  <!-- The name of the project within the zargo file should be the same as ${model.name} here, -->
  <!-- and you need to make sure the constituent files in the .zargo file are correctly named -->
  <!-- (modelname_.xmi, modelname.argo, etc) -->

  
  <target name="build-model" depends="prepare" description="build tutorial model from an Argo UML file" >
    <ant antfile="build-model.xml" target="build-model-from-zargo" inheritRefs="true">
      <property name="model.name" value="tutorial"/>
      <property name="model.src" value="${model}/tutorial"/>
      <reference torefid="class.path" refid="tutorial.class.path"/>
    </ant>
  </target>
  

  <!-- create database -->
  <target name="build-db" depends="build-model">
    <ant antfile="build-model.xml" target="build-db" inheritRefs="true">
      <property name="model.name" value="tutorial"/>
      <reference torefid="class.path" refid="tutorial.class.path"/>
      <property name="db.name" value="db.tutorial"/>
      <property name="objectstore.name" value="os.tutorial"/>
    </ant>
  </target>
  
  <!-- insert data into the database -->
  <target name="insert-data" depends="build-db" 
       description="insert xml data to the tutorial">
    <taskdef
      name="insert-xml-data"
      classname="org.intermine.dataloader.XmlDataLoaderTask">
      <classpath refid="tutorial.class.path"/>
    </taskdef>
    <insert-xml-data integrationWriter="integration.tutorial"  xmlFile="${resources}/tutorial_data.xml"  sourceName="tutorialsource">
    </insert-xml-data>
  </target>

  <!-- compile the source -->
  <target name="compile" depends="build-model" description="compile the source code">
    <javac destdir="${build.java}">
      <classpath refid="tutorial.class.path"/>
        <src path="${src.java}"/>
      </javac>
  </target>

  <target name="jar-model" depends="build-model"
          description="create a jar of the model">
    <ant antfile="build-model.xml" target="jar" inheritRefs="true">
      <property name="model.name" value="tutorial"/>
      <reference torefid="class.path" refid="tutorial.class.path"/>
    </ant>    
  </target>

  <!-- execute the tutorial -->
  <target name="run" depends="clean, compile, insert-data"
       description="run the tutorial">
    <java classname="org.intermine.tutorial.SimpleQuery" dir="${build}" fork="true">
      <classpath refid="tutorial.class.path"/>
    </java>
  </target>
 
  <target name="test" depends="clean, compile, insert-data" 
       description="do a tutorial test and fail if there are any errors">
    <antcall target="build-db"/>
 </target>

 <target name="build-webapp" depends="jar-model" 
      description="build webapp with the tutorial model">
   <ant antfile="build-webapp.xml" target="add-model-to-webapp" inheritRefs="true">
      <property name="war" value="${build.webapp}/intermine.war"/>
      <property name="model.name" value="tutorial"/>
      <reference torefid="class.path" refid="tutorial.class.path"/>
      <property name="model.src" value="${model}/tutorial"/>
    </ant>        
    <patternset id="intermine-properties">
      <include name="intermine.properties"/>
    </patternset>
    <ant antfile="build-webapp.xml" target="add-to-war-classes" inheritRefs="true">
      <property name="war" value="${build.webapp}/intermine.war"/>
      <property name="file.dir" value="."/>
      <reference torefid="file.names" refid="intermine-properties"/>
    </ant>
  </target>

  <target name="release-webapp" depends="build-webapp, insert-data"
    description="release the tutorial web application to the server">
   <ant antfile="build-webapp.xml" target="release-webapp" inheritRefs="true">
      <property name="war" value="${build.webapp}/intermine.war"/>
      <reference torefid="class.path" refid="tutorial.class.path"/>
    </ant>    
   </target>

 <target name="remove-webapp"
    description="remove the web application from the server">
     <ant antfile="build-webapp.xml" target="release-webapp" inheritRefs="true">
      <property name="war" value="${build.webapp}/intermine.war"/>
      <reference torefid="class.path" refid="tutorial.class.path"/>
    </ant>    
  </target>

  <!-- cleaning up targets -->
  <target name="clean"
          description="clean up generated files">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete file="intermine.log"/>
    <delete file="velocity.log"/>
  </target>
</project>
